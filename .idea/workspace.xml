<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="84cce6d6-743f-47ed-a6bd-9a8f651c6068" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/http-api/inventory-request.http" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;adamd87&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="1753fd99-acf8-46eb-81d3-39e22e50d63d" />
        <option name="url" value="https://github.com/adamd87/micros.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2XuS9sWThL1PVIPjg85aIEi7OLK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "inventory",
    "jdk.selected.JAVA_MODULE": "18",
    "last_opened_file_path": "C:/Users/adamd/IdeaProjects/micros/http-api",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="pl.adamd.orderservice.dto" />
      <recent name="pl.adamd.orderservice.model" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\adamd\IdeaProjects\micros\http-api" />
      <recent name="C:\Users\adamd\IdeaProjects\micros\inventory" />
      <recent name="C:\Users\adamd\IdeaProjects\micros\order-service" />
      <recent name="C:\Users\adamd\IdeaProjects\micros\product-service" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\adamd\IdeaProjects\micros\docker" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean verify" />
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.InventoryApplication">
    <configuration name="inventory-request | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/http-api/inventory-request.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="order-request | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/http-api/order-request.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="product-requests | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/product-service/src/main/resources/product-requests.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ProductControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="product-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="pl.adamd.productservice.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="pl.adamd.productservice.controller" />
      <option name="MAIN_CLASS_NAME" value="pl.adamd.productservice.controller.ProductControllerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="inventory" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="pl.adamd.inventory.InventoryApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="pl.adamd.orderservice.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="product-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="pl.adamd.productservice.ProductServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker/mongo.yaml.mysql: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mysql" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker/mongo.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.inventory-request | #1" />
        <item itemvalue="HTTP Request.order-request | #1" />
        <item itemvalue="Docker.docker/mongo.yaml.mysql: Compose Deployment" />
        <item itemvalue="JUnit.ProductControllerTest" />
        <item itemvalue="HTTP Request.product-requests | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="84cce6d6-743f-47ed-a6bd-9a8f651c6068" name="Changes" comment="" />
      <created>1699477325623</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1699477325623</updated>
      <workItem from="1699477326620" duration="201000" />
      <workItem from="1699478493273" duration="4721000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>